module Ccap.HtmlRender.Write
  ( writeToFile
  ) where

import Prelude
import Ccap.HtmlRender.Render as Render
import Ccap.HtmlRender.Util (liftEffectSafely, processResult)
import Control.Monad.Except (ExceptT)
import Effect (Effect)
import Effect.Aff (Aff, launchAff_)
import Effect.Console (log)
import Halogen.HTML as HH
import Node.Encoding (Encoding(..))
import Node.FS.Sync as Sync
import Node.Path (FilePath)

writeToFile :: forall i w. FilePath -> HH.HTML i w -> Effect Unit
writeToFile path html = do
  htmlStr <-
    Render._pretty
      ( "<!-- This file is automatically generated. Do not edit. -->"
          <> (Render.prependDocType $ Render.render html)
      )
  log path
  launchAff_ (processResult (writeOutput path htmlStr))

writeOutput :: FilePath -> String -> ExceptT String Aff Unit
writeOutput path = liftEffectSafely <<< Sync.writeTextFile UTF8 path
